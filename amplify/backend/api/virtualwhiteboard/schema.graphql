type Canvas
@model (subscriptions: { level: public})
@auth(rules: [{
  allow: public,
  provider: iam,
  operations: [create, update, delete, read]
}])
{
  id: ID!
  clientId: String!
  data: String!
}

type WhiteBoard
@model (subscriptions: { level: public})
@auth(rules: [{
  allow: public,
  provider: iam,
  operations: [create, update, delete, read]
}])
{
  id: ID!
  name: String!
  canvas: Canvas @connection
  messages: [Message] @connection(keyName: "byWhiteboard", fields: ["id"])
}

type Message
@model (subscriptions: { level: public})
@auth(rules: [
  {allow: public,provider: iam, operations: [create, read]},
  {allow: owner, operations: [read, create, update, delete]}
])
@key(name: "byWhiteboard", fields: ["whiteBoardID", "content"])
{
  id: ID!
  content: String!
  rating: Int
  author: User @connection
  whiteBoard: WhiteBoard @connection(fields: ["whiteBoardID"])
  whiteBoardID: ID!
}

type User @model @auth(rules: [{ allow: owner }]) {
  id: ID!
  firstName: String
  lastName: String
  nickName: String
  email: String
}